name: Basic CI Skeleton (uv & pyproject.toml)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Use the specific Python version defined in .python-version
        # Fetching it dynamically or reading it here might be complex in pure YAML,
        # so using the known value '3.11' directly as per the .python-version file
        python-version: ["3.11"]

    steps:
      # 1. Check out code
      - name: Check out code
        uses: actions/checkout@v4

      # 2. Install uv
      # Recommended approach from uv docs: use the dedicated action
      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          # Optional: specify uv version, defaults to latest stable
          # uv-version: latest
          python-version: ${{ matrix.python-version }}

      # 3. Install dependencies with caching
      # uv handles caching automatically when used this way
      - name: Install dependencies
        run: uv sync --all-extras
        env:
          # Enable caching via environment variable as recommended
          UV_CACHE_ENABLE: 1

      # 4. Run Linters
      - name: Run Linters
        run: |
          echo "Running Flake8..."
          # Assuming flake8 is installed via dev dependencies
          uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

          echo "Running Black (check)..."
          # Assuming black is installed via dev dependencies
          uv run black . --check

      # 5. Run Pytest
      - name: Run Pytest
        run: |
          # Assuming pytest is installed via dev dependencies
          uv run pytest
