"""first migration

Revision ID: c7113c54d14b
Revises: 
Create Date: 2025-10-26 18:59:41.918043

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c7113c54d14b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_runs',
    sa.Column('job_run_id', sa.UUID(), nullable=False),
    sa.Column('job_name', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', 'PARTIAL', name='jobstatustypeenum'), nullable=False),
    sa.Column('processed_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('job_run_id')
    )
    op.create_index(op.f('ix_job_runs_job_name'), 'job_runs', ['job_name'], unique=False)
    op.create_index('ix_job_runs_job_name_started_at', 'job_runs', ['job_name', 'started_at'], unique=False)
    op.create_table('named_entities',
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('entity_text', sa.Text(), nullable=False),
    sa.Column('normalized_form', sa.Text(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('language', sa.String(length=2), nullable=True),
    sa.Column('external_link', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('entity_id')
    )
    op.create_index(op.f('ix_named_entities_category'), 'named_entities', ['category'], unique=False)
    op.create_index(op.f('ix_named_entities_language'), 'named_entities', ['language'], unique=False)
    op.create_index(op.f('ix_named_entities_normalized_form'), 'named_entities', ['normalized_form'], unique=False)
    op.create_index('ix_named_entities_uq', 'named_entities', ['normalized_form', 'category', 'language'], unique=True)
    op.create_table('sources',
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('kind', sa.Enum('WEBSITE', 'RSS', 'LOCAL', 'CLOUD', name='sourcetypeenum'), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_run_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('source_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'data_analyst', name='roleenum'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('articles',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('content_text', sa.Text(), nullable=True),
    sa.Column('original_url', sa.Text(), nullable=True),
    sa.Column('source_format', sa.String(), nullable=True),
    sa.Column('extraction_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('language', sa.String(length=2), nullable=True),
    sa.Column('checksum', sa.String(), nullable=True),
    sa.Column('content_text_vector', postgresql.TSVECTOR(), nullable=True),
    sa.Column('last_nlp_run_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extracted_via_ocr', sa.Boolean(), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('article_id')
    )
    op.create_index(op.f('ix_articles_checksum'), 'articles', ['checksum'], unique=True)
    op.create_index('ix_articles_content_text_vector', 'articles', ['content_text_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_articles_last_nlp_run_timestamp'), 'articles', ['last_nlp_run_timestamp'], unique=False)
    op.create_index(op.f('ix_articles_source_id'), 'articles', ['source_id'], unique=False)
    op.create_table('clusters',
    sa.Column('cluster_id', sa.UUID(), nullable=False),
    sa.Column('cluster_name', sa.String(), nullable=True),
    sa.Column('cluster_kind', sa.Enum('TOPIC', 'ENTITY', name='clustertypeenum'), nullable=False),
    sa.Column('last_run_id', sa.UUID(), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['last_run_id'], ['job_runs.job_run_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('annotations',
    sa.Column('annotation_id', sa.UUID(), nullable=False),
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('kind', sa.Enum('TAG', 'COMMENT', name='annotationtypeenum'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.article_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('annotation_id')
    )
    op.create_index(op.f('ix_annotations_article_id'), 'annotations', ['article_id'], unique=False)
    op.create_index(op.f('ix_annotations_user_id'), 'annotations', ['user_id'], unique=False)
    op.create_table('article_clusters',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('cluster_id', sa.UUID(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.article_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['cluster_id'], ['clusters.cluster_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id', 'cluster_id')
    )
    op.create_table('article_entities',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.article_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['entity_id'], ['named_entities.entity_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id', 'entity_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('article_entities')
    op.drop_table('article_clusters')
    op.drop_index(op.f('ix_annotations_user_id'), table_name='annotations')
    op.drop_index(op.f('ix_annotations_article_id'), table_name='annotations')
    op.drop_table('annotations')
    op.drop_table('clusters')
    op.drop_index(op.f('ix_articles_source_id'), table_name='articles')
    op.drop_index(op.f('ix_articles_last_nlp_run_timestamp'), table_name='articles')
    op.drop_index('ix_articles_content_text_vector', table_name='articles', postgresql_using='gin')
    op.drop_index(op.f('ix_articles_checksum'), table_name='articles')
    op.drop_table('articles')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('sources')
    op.drop_index('ix_named_entities_uq', table_name='named_entities')
    op.drop_index(op.f('ix_named_entities_normalized_form'), table_name='named_entities')
    op.drop_index(op.f('ix_named_entities_language'), table_name='named_entities')
    op.drop_index(op.f('ix_named_entities_category'), table_name='named_entities')
    op.drop_table('named_entities')
    op.drop_index('ix_job_runs_job_name_started_at', table_name='job_runs')
    op.drop_index(op.f('ix_job_runs_job_name'), table_name='job_runs')
    op.drop_table('job_runs')
    # ### end Alembic commands ###
